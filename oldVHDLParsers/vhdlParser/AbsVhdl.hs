

module AbsVhdl where

-- Haskell module generated by the BNF converter




newtype Ident = Ident String deriving (Eq, Ord, Show, Read)
newtype NumString = NumString String deriving (Eq, Ord, Show, Read)
data IS = IS
  deriving (Eq, Ord, Show, Read)

data BUSText = BUSText
  deriving (Eq, Ord, Show, Read)

data GUARDEDtext = GUARDEDtext
  deriving (Eq, Ord, Show, Read)

data ConstantText = ConstantText
  deriving (Eq, Ord, Show, Read)

data InText = InText
  deriving (Eq, Ord, Show, Read)

data SIGNALText = SIGNALText
  deriving (Eq, Ord, Show, Read)

data VARIABLEText = VARIABLEText
  deriving (Eq, Ord, Show, Read)

data PackageBodytext = PackageBodytext
  deriving (Eq, Ord, Show, Read)

data Abstract_literal
    = Abstract_literalDecimal_literal Decimal_literal
    | Abstract_literalBased_literal Based_literal
  deriving (Eq, Ord, Show, Read)

data Access_type_definition
    = Access_type_definition Subtype_indication
  deriving (Eq, Ord, Show, Read)

data Variable_name = Variable_name Name
  deriving (Eq, Ord, Show, Read)

data Actual_designator
    = Actual_designatorExpression Expression
    | Actual_designatorSignal_name Signal_name
    | Actual_designatorVariable_name Variable_name
    | Actual_designatorFile_name File_name
    | Actual_designator_OPEN
  deriving (Eq, Ord, Show, Read)

data File_name = File_name Name
  deriving (Eq, Ord, Show, Read)

data Actual_parameter_part
    = Actual_parameter_part Parameter_association_list
  deriving (Eq, Ord, Show, Read)

data Parameter_association_list
    = Parameter_association_list Association_list
  deriving (Eq, Ord, Show, Read)

data Actual_part
    = Actual_partActual_designator Actual_designator
    | Actual_part1 Function_name Actual_designator
    | Actual_part2 Type_mark Actual_designator
  deriving (Eq, Ord, Show, Read)

data Adding_operator
    = Adding_operator1 | Adding_operator2 | Adding_operator3
  deriving (Eq, Ord, Show, Read)

data Aggregate = Aggregate [Element_association]
  deriving (Eq, Ord, Show, Read)

data Alias_declaration
    = Alias_declaration Alias_designator [Subtype_indication] Name [Signature]
  deriving (Eq, Ord, Show, Read)

data Alias_designator
    = Alias_designatorIdentifier Identifier
    | Alias_designatorCharacter_literal Character_literal
    | Alias_designatorOperator_symbol Operator_symbol
  deriving (Eq, Ord, Show, Read)

data Allocator
    = Allocator1 Subtype_indication | Allocator2 Qualified_expression
  deriving (Eq, Ord, Show, Read)

data Qualified_expression
    = Qualified_expression Expression
    | Qualified_expression1 Type_mark Expression
    | Qualified_expression2 Type_mark Aggregate
  deriving (Eq, Ord, Show, Read)

data Architecture_body
    = Architecture_body Identifier Entity_name Architecture_declarative_part Architecture_statement_part MaybeArch MaybeArchitecture_simple_name
  deriving (Eq, Ord, Show, Read)

data MaybeArch = MaybeArch_ARCHITECTURE | MaybeArch1
  deriving (Eq, Ord, Show, Read)

data MaybeArchitecture_simple_name
    = MaybeArchitecture_simple_nameArchitecture_simple_name Architecture_simple_name
    | MaybeArchitecture_simple_name1
  deriving (Eq, Ord, Show, Read)

data Architecture_simple_name
    = Architecture_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Array_type_definition
    = Array_type_definitionUnconstrained_array_definition Unconstrained_array_definition
    | Array_type_definitionConstrained_array_definition Constrained_array_definition
  deriving (Eq, Ord, Show, Read)

data Assertion = Assertion Condition [MaybeREPORT] [MaybeSEVERITY]
  deriving (Eq, Ord, Show, Read)

data Assertion_statement = Assertion_statement [Label] Assertion
  deriving (Eq, Ord, Show, Read)

data Association_element
    = Association_element [Formal_part] Actual_part
  deriving (Eq, Ord, Show, Read)

data Association_list = Association_list [Association_element]
  deriving (Eq, Ord, Show, Read)

data Generic_clause_Map
    = Generic_clause_Map Generic_clause [Generic_map_aspectSemi]
  deriving (Eq, Ord, Show, Read)

data Port_clause_map
    = Port_clause_map Port_clause [Port_map_aspectSemi]
  deriving (Eq, Ord, Show, Read)

data Port_map_aspectSemi = Port_map_aspectSemi Port_map_aspectSemi
  deriving (Eq, Ord, Show, Read)

data Index_specificationPar
    = Index_specificationPar Index_specification
  deriving (Eq, Ord, Show, Read)

data Guard_expressionPar = Guard_expressionPar Guard_expressionPar
  deriving (Eq, Ord, Show, Read)

data Case_labelColon = Case_labelColon Case_label
  deriving (Eq, Ord, Show, Read)

data Case_label = Case_label Label
  deriving (Eq, Ord, Show, Read)

data WaveformElse
    = WaveformElse Waveform Condition | WaveformNoElse [WhenCondition]
  deriving (Eq, Ord, Show, Read)

data WhenCondition = WhenCondition Condition
  deriving (Eq, Ord, Show, Read)

data DotInt = DotInt VInteger
  deriving (Eq, Ord, Show, Read)

data Static_expressionAssign
    = Static_expressionAssign Static_expression
  deriving (Eq, Ord, Show, Read)

data LoopLabelColon = LoopLabelColon Loop_label
  deriving (Eq, Ord, Show, Read)

data Loop_label = Loop_label Label
  deriving (Eq, Ord, Show, Read)

data Attribute_declaration
    = Attribute_declaration Identifier Type_mark
  deriving (Eq, Ord, Show, Read)

data Attribute_designator
    = Attribute_designator Attribute_simple_name
  deriving (Eq, Ord, Show, Read)

data Attribute_simple_name = Attribute_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Attribute_name
    = Attribute_name Prefix [Signature] Attribute_designator [ExpressPar]
  deriving (Eq, Ord, Show, Read)

data ExpressPar = ExpressPar Expression
  deriving (Eq, Ord, Show, Read)

data Attribute_specification
    = Attribute_specification Attribute_designator Entity_specification Expression
  deriving (Eq, Ord, Show, Read)

data Base = Base VInteger
  deriving (Eq, Ord, Show, Read)

data Base_unit_declaration = Base_unit_declaration Identifier
  deriving (Eq, Ord, Show, Read)

data Based_integer = Based_integer [Extended_digit]
  deriving (Eq, Ord, Show, Read)

data Digit
    = Digit_0
    | Digit_1
    | Digit_2
    | Digit_3
    | Digit_4
    | Digit_5
    | Digit_6
    | Digit_7
    | Digit_8
    | Digit_9
  deriving (Eq, Ord, Show, Read)

data Based_literal = Based_literal Base [Based_integer] [Exponent]
  deriving (Eq, Ord, Show, Read)

data Basic_identifier = Basic_identifier Ident
  deriving (Eq, Ord, Show, Read)

data Binding_indication
    = Binding_indication [UseEntity] [Generic_map_aspect] [Port_map_aspect]
  deriving (Eq, Ord, Show, Read)

data Bit_string_literal
    = Bit_string_literal Base_specifier Bit_value
  deriving (Eq, Ord, Show, Read)

data Bit_value = Bit_value [Extended_digit]
  deriving (Eq, Ord, Show, Read)

data Block_configuration
    = Block_configuration Block_specification [UseEntity] [Configuration_item]
  deriving (Eq, Ord, Show, Read)

data Block_declarative_item
    = Block_declarative_itemSubprogram_declaration Subprogram_declaration
    | Block_declarative_itemSubprogram_body Subprogram_body
    | Block_declarative_itemType_declaration Type_declaration
    | Block_declarative_itemSubtype_declaration Subtype_declaration
    | Block_declarative_itemConstant_declaration Constant_declaration
    | Block_declarative_itemSignal_declaration Signal_declaration
    | Block_declarative_itemShared_variable_declaration Shared_variable_declaration
    | Block_declarative_itemFile_declaration File_declaration
    | Block_declarative_itemAlias_declaration Alias_declaration
    | Block_declarative_itemComponent_declaration Component_declaration
    | Block_declarative_itemAttribute_declaration Attribute_declaration
    | Block_declarative_itemAttribute_specification Attribute_specification
    | Block_declarative_itemConfiguration_specification Configuration_specification
    | Block_declarative_itemDisconnection_specification Disconnection_specification
    | Block_declarative_itemUse_clause Use_clause
    | Block_declarative_itemGroup_template_declaration Group_template_declaration
    | Block_declarative_itemGroup_declaration Group_declaration
  deriving (Eq, Ord, Show, Read)

data Shared_variable_declaration
    = Shared_variable_declaration Variable_declaration
  deriving (Eq, Ord, Show, Read)

data Block_declarative_part
    = Block_declarative_part [Block_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Block_header
    = Block_header [Generic_clause_Map] [Port_clause_map]
  deriving (Eq, Ord, Show, Read)

data Architecture_name = Architecture_name Name
  deriving (Eq, Ord, Show, Read)

data Generate_statement_label = Generate_statement_label Name
  deriving (Eq, Ord, Show, Read)

data Block_specification
    = Block_specificationArchitecture_name Architecture_name
    | Block_specificationBlock_statement_label Block_statement_label
    | Block_specification1 Generate_statement_label Index_specificationPar
  deriving (Eq, Ord, Show, Read)

data Block_statement_label = Block_statement_label Label
  deriving (Eq, Ord, Show, Read)

data Block_statement
    = Block_statement Block_label [Guard_expressionPar] [IS] Block_header Block_declarative_part Block_statement_part [Block_label]
  deriving (Eq, Ord, Show, Read)

data Block_label = Block_label Label
  deriving (Eq, Ord, Show, Read)

data Block_statement_part
    = Block_statement_part [Concurrent_statement]
  deriving (Eq, Ord, Show, Read)

data Case_statement
    = Case_statement [Case_labelColon] Expression [Case_statement_alternative] [Case_label]
  deriving (Eq, Ord, Show, Read)

data Choice
    = ChoiceSimple_expression Simple_expression
    | ChoiceDiscrete_range Discrete_range
    | ChoiceElement_simple_name Element_simple_name
    | Choice_OTHERS
  deriving (Eq, Ord, Show, Read)

data Element_simple_name = Element_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Choices = Choices [Choice]
  deriving (Eq, Ord, Show, Read)

data Case_statement_alternative
    = Case_statement_alternative Choices Sequence_of_statements
  deriving (Eq, Ord, Show, Read)

data Character_literal = Character_literal Graphic_character
  deriving (Eq, Ord, Show, Read)

data Component_configuration
    = Component_configuration Component_specification [Binding_indication] [Block_configuration]
  deriving (Eq, Ord, Show, Read)

data Component_declaration
    = Component_declaration Identifier [IS] [Local_generic_clause] [Local_port_clause] [Component_simple_name]
  deriving (Eq, Ord, Show, Read)

data Component_simple_name = Component_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Local_port_clause = Local_port_clause Port_clause
  deriving (Eq, Ord, Show, Read)

data Component_instantiation_statement
    = Component_instantiation_statement Instantiation_label Instantiated_unit [Generic_map_aspect] [Port_map_aspect]
  deriving (Eq, Ord, Show, Read)

data Instantiation_label = Instantiation_label Label
  deriving (Eq, Ord, Show, Read)

data Component_specification
    = Component_specification Instantiation_list Component_name
  deriving (Eq, Ord, Show, Read)

data Component_name = Component_name Name
  deriving (Eq, Ord, Show, Read)

data Composite_type_definition
    = Composite_type_definitionArray_type_definition Array_type_definition
    | Composite_type_definitionRecord_type_definition Record_type_definition
  deriving (Eq, Ord, Show, Read)

data Concurrent_assertion_statement
    = Concurrent_assertion_statement [Label] [MaybePOSTPONED] Assertion
  deriving (Eq, Ord, Show, Read)

data MaybePOSTPONED = MaybePOSTPONED
  deriving (Eq, Ord, Show, Read)

data Concurrent_procedure_call_statement
    = Concurrent_procedure_call_statement [Label] [MaybePOSTPONED] Procedure_call
  deriving (Eq, Ord, Show, Read)

data Concurrent_signal_assignment_statement
    = Concurrent_signal_assignment_statement1 [Label] [MaybePOSTPONED] Conditional_signal_assignment
    | Concurrent_signal_assignment_statement2 [Label] [MaybePOSTPONED] Selected_signal_assignment
  deriving (Eq, Ord, Show, Read)

data Concurrent_statement
    = Concurrent_statementBlock_statement Block_statement
    | Concurrent_statementProcess_statement Process_statement
    | Concurrent_statementConcurrent_procedure_call_statement Concurrent_procedure_call_statement
    | Concurrent_statementConcurrent_assertion_statement Concurrent_assertion_statement
    | Concurrent_statementConcurrent_signal_assignment_statement Concurrent_signal_assignment_statement
    | Concurrent_statementComponent_instantiation_statement Component_instantiation_statement
    | Concurrent_statementGenerate_statement Generate_statement
  deriving (Eq, Ord, Show, Read)

data Condition = Condition Boolean_expression
  deriving (Eq, Ord, Show, Read)

data Boolean_expression = Boolean_expression Expression
  deriving (Eq, Ord, Show, Read)

data Condition_clause = Condition_clause Condition
  deriving (Eq, Ord, Show, Read)

data Conditional_signal_assignment
    = Conditional_signal_assignment Target Options Conditional_waveforms
  deriving (Eq, Ord, Show, Read)

data Conditional_waveforms = Conditional_waveforms [WaveformElse]
  deriving (Eq, Ord, Show, Read)

data MaybeCONFIGURATION = MaybeCONFIGURATION
  deriving (Eq, Ord, Show, Read)

data Configuration_declaration
    = Configuration_declaration Identifier Entity_name Configuration_declarative_part Block_configuration [MaybeCONFIGURATION] [Configuration_simple_name]
  deriving (Eq, Ord, Show, Read)

data Configuration_simple_name
    = Configuration_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Configuration_declarative_item
    = Configuration_declarative_itemUse_clause Use_clause
    | Configuration_declarative_itemAttribute_specification Attribute_specification
    | Configuration_declarative_itemGroup_declaration Group_declaration
  deriving (Eq, Ord, Show, Read)

data Configuration_declarative_part
    = Configuration_declarative_part [Configuration_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Configuration_item
    = Configuration_itemBlock_configuration Block_configuration
    | Configuration_itemComponent_configuration Component_configuration
  deriving (Eq, Ord, Show, Read)

data Configuration_specification
    = Configuration_specification Component_specification Binding_indication
  deriving (Eq, Ord, Show, Read)

data Constant_declaration
    = Constant_declaration Identifier_list Subtype_indication [VarAssign]
  deriving (Eq, Ord, Show, Read)

data VarAssign = VarAssign Expression
  deriving (Eq, Ord, Show, Read)

data Constrained_array_definition
    = Constrained_array_definition Index_constraint Element_subtype_indication
  deriving (Eq, Ord, Show, Read)

data Constraint
    = ConstraintRange_constraint Range_constraint
    | ConstraintIndex_constraint Index_constraint
  deriving (Eq, Ord, Show, Read)

data Context_clause = Context_clause [Context_item]
  deriving (Eq, Ord, Show, Read)

data Context_item
    = Context_itemLibrary_clause Library_clause
    | Context_itemUse_clause Use_clause
  deriving (Eq, Ord, Show, Read)

data Decimal_literal = Decimal_literal VInteger [DotInt] [Exponent]
  deriving (Eq, Ord, Show, Read)

data Declaration
    = DeclarationType_declaration Type_declaration
    | DeclarationSubtype_declaration Subtype_declaration
    | DeclarationObject_declaration Object_declaration
    | DeclarationInterface_declaration Interface_declaration
    | DeclarationAlias_declaration Alias_declaration
    | DeclarationAttribute_declaration Attribute_declaration
    | DeclarationComponent_declaration Component_declaration
    | DeclarationGroup_template_declaration Group_template_declaration
    | DeclarationGroup_declaration Group_declaration
    | DeclarationEntity_declaration Entity_declaration
    | DeclarationConfiguration_declaration Configuration_declaration
    | DeclarationSubprogram_declaration Subprogram_declaration
    | DeclarationPackage_declaration Package_declaration
  deriving (Eq, Ord, Show, Read)

data Delay_mechanism
    = Delay_mechanism_TRANSPORT | Delay_mechanism1 [MaybeRejectTime]
  deriving (Eq, Ord, Show, Read)

data MaybeRejectTime = MaybeRejectTime Time_expression
  deriving (Eq, Ord, Show, Read)

data Design_file = Design_file [Design_unit]
  deriving (Eq, Ord, Show, Read)

data Design_unit = Design_unit Context_clause Library_unit
  deriving (Eq, Ord, Show, Read)

data Designator
    = DesignatorIdentifier Identifier
    | DesignatorOperator_symbol Operator_symbol
  deriving (Eq, Ord, Show, Read)

data Direction = Direction_TO | Direction_DOWNTO
  deriving (Eq, Ord, Show, Read)

data Disconnection_specification
    = Disconnection_specification Guarded_signal_specification Time_expression
  deriving (Eq, Ord, Show, Read)

data Discrete_range
    = Discrete_rangeDiscrete_subtype_indication Discrete_subtype_indication
    | Discrete_rangeRange Range
  deriving (Eq, Ord, Show, Read)

data Discrete_subtype_indication
    = Discrete_subtype_indication Subprogram_declarative_item
  deriving (Eq, Ord, Show, Read)

data Element_declaration
    = Element_declaration Identifier_list Element_subtype_definition
  deriving (Eq, Ord, Show, Read)

data ChoiceAssign = ChoiceAssign Choices
  deriving (Eq, Ord, Show, Read)

data Element_association
    = Element_association [ChoiceAssign] Expression
  deriving (Eq, Ord, Show, Read)

data Element_subtype_definition
    = Element_subtype_definition Subtype_indication
  deriving (Eq, Ord, Show, Read)

data Entity_aspect
    = Entity_aspect1 Entity_name [ParArchitecture_identifier]
    | Entity_aspect2 Configuration_name
    | Entity_aspect_OPEN
  deriving (Eq, Ord, Show, Read)

data Configuration_name = Configuration_name Name
  deriving (Eq, Ord, Show, Read)

data ParArchitecture_identifier
    = ParArchitecture_identifier Architecture_identifier
  deriving (Eq, Ord, Show, Read)

data UseEntity = UseEntity Entity_aspect
  deriving (Eq, Ord, Show, Read)

data Entity_class
    = Entity_class_ENTITY
    | Entity_class_ARCHITECTURE
    | Entity_class_CONFIGURATION
    | Entity_class_PROCEDURE
    | Entity_class_FUNCTION
    | Entity_class_PACKAGE
    | Entity_class_TYPE
    | Entity_class_SUBTYPE
    | Entity_class_CONSTANT
    | Entity_class_SIGNAL
    | Entity_class_VARIABLE
    | Entity_class_COMPONENT
    | Entity_class_LABEL
    | Entity_class_LITERAL
    | Entity_class_UNITS
    | Entity_class_GROUP
    | Entity_class_FILE
  deriving (Eq, Ord, Show, Read)

data ECArrows = ECArrows
  deriving (Eq, Ord, Show, Read)

data Entity_class_entry
    = Entity_class_entry Entity_class [ECArrows]
  deriving (Eq, Ord, Show, Read)

data Entity_class_entry_list
    = Entity_class_entry_list [Entity_class_entry]
  deriving (Eq, Ord, Show, Read)

data Entity_declaration
    = Entity_declaration Identifier Entity_header Entity_declarative_part [BEGINEntity_statement_part] [ENTITYText] [Entity_simple_name]
  deriving (Eq, Ord, Show, Read)

data BEGINEntity_statement_part
    = BEGINEntity_statement_part Entity_statement_part
  deriving (Eq, Ord, Show, Read)

data ENTITYText = ENTITYText Entity_statement_part
  deriving (Eq, Ord, Show, Read)

data Entity_simple_name = Entity_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Entity_declarative_item
    = Entity_declarative_itemSubprogram_declaration Subprogram_declaration
    | Entity_declarative_itemSubprogram_body Subprogram_body
    | Entity_declarative_itemType_declaration Type_declaration
    | Entity_declarative_itemSubtype_declaration Subtype_declaration
    | Entity_declarative_itemConstant_declaration Constant_declaration
    | Entity_declarative_itemSignal_declaration Signal_declaration
    | Entity_declarative_itemShared_variable_declaration Shared_variable_declaration
    | Entity_declarative_itemFile_declaration File_declaration
    | Entity_declarative_itemAlias_declaration Alias_declaration
    | Entity_declarative_itemAttribute_declaration Attribute_declaration
    | Entity_declarative_itemAttribute_specification Attribute_specification
    | Entity_declarative_itemDisconnection_specification Disconnection_specification
    | Entity_declarative_itemUse_clause Use_clause
    | Entity_declarative_itemGroup_template_declaration Group_template_declaration
    | Entity_declarative_itemGroup_declaration Group_declaration
  deriving (Eq, Ord, Show, Read)

data Entity_declarative_part
    = Entity_declarative_part [Entity_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Entity_designator = Entity_designator Entity_tag [Signature]
  deriving (Eq, Ord, Show, Read)

data Entity_header
    = Entity_header [Formal_generic_clause] [Formal_port_clause]
  deriving (Eq, Ord, Show, Read)

data Formal_generic_clause = Formal_generic_clause Generic_clause
  deriving (Eq, Ord, Show, Read)

data Formal_port_clause = Formal_port_clause Port_clause
  deriving (Eq, Ord, Show, Read)

data Entity_name_list
    = Entity_name_list1 [Entity_designator]
    | Entity_name_list_OTHERS
    | Entity_name_list_ALL
  deriving (Eq, Ord, Show, Read)

data Entity_specification
    = Entity_specification Entity_name_list Entity_class
  deriving (Eq, Ord, Show, Read)

data Entity_statement
    = Entity_statementConcurrent_assertion_statement Concurrent_assertion_statement
    | Entity_statementPassive_concurrent_procedure_call_statement Passive_concurrent_procedure_call_statement
    | Entity_statementPassive_process_statement Passive_process_statement
  deriving (Eq, Ord, Show, Read)

data Passive_process_statement
    = Passive_process_statement Process_statement
  deriving (Eq, Ord, Show, Read)

data Passive_concurrent_procedure_call_statement
    = Passive_concurrent_procedure_call_statement Concurrent_procedure_call_statement
  deriving (Eq, Ord, Show, Read)

data Entity_statement_part
    = Entity_statement_part [Entity_statement]
  deriving (Eq, Ord, Show, Read)

data Entity_tag
    = Entity_tagSimple_name Simple_name
    | Entity_tagCharacter_literal Character_literal
    | Entity_tagOperator_symbol Operator_symbol
  deriving (Eq, Ord, Show, Read)

data Enumeration_literal
    = Enumeration_literalIdentifier Identifier
    | Enumeration_literalCharacter_literal Character_literal
  deriving (Eq, Ord, Show, Read)

data Enumeration_type_definition
    = Enumeration_type_definition [Enumeration_literal]
  deriving (Eq, Ord, Show, Read)

data Exit_statement
    = Exit_statement [Label] [Loop_label] [WhenCondition]
  deriving (Eq, Ord, Show, Read)

data Exponent = Exponent1 PlusOp VInteger | Exponent2 VInteger
  deriving (Eq, Ord, Show, Read)

data PlusOp = PlusOp
  deriving (Eq, Ord, Show, Read)

data Expression
    = Expression1 Relation ExpOps Relation
    | ExpressionRelation Relation
  deriving (Eq, Ord, Show, Read)

data ExpOps
    = ExpOps_AND
    | ExpOps_OR
    | ExpOps_XOR
    | ExpOps_NAND
    | ExpOps_NOR
    | ExpOps_XNOR
  deriving (Eq, Ord, Show, Read)

data Extended_digit
    = Extended_digitDigit Digit | Extended_digitLetter Letter
  deriving (Eq, Ord, Show, Read)

data Extended_identifier = Extended_identifier [Graphic_character]
  deriving (Eq, Ord, Show, Read)

data Factor = Factor1 [Primary] | Factor2 Primary | Factor3 Primary
  deriving (Eq, Ord, Show, Read)

data File_declaration = File_declaration [FileMatch]
  deriving (Eq, Ord, Show, Read)

data FileMatch
    = FileMatch Identifier_list Subtype_indication File_open_information
  deriving (Eq, Ord, Show, Read)

data File_logical_name = File_logical_name String_expression
  deriving (Eq, Ord, Show, Read)

data String_expression = String_expression Expression
  deriving (Eq, Ord, Show, Read)

data File_open_information
    = File_open_information [OPENFile] File_logical_name
  deriving (Eq, Ord, Show, Read)

data OPENFile = OPENFile File_open_kind_expression
  deriving (Eq, Ord, Show, Read)

data File_open_kind_expression
    = File_open_kind_expression Expression
  deriving (Eq, Ord, Show, Read)

data File_type_definition = File_type_definition Type_mark
  deriving (Eq, Ord, Show, Read)

data Floating_type_definition
    = Floating_type_definition Range_constraint
  deriving (Eq, Ord, Show, Read)

data Formal_designator
    = Formal_designatorGeneric_name Generic_name
    | Formal_designatorPort_name Port_name
    | Formal_designatorParameter_name Parameter_name
  deriving (Eq, Ord, Show, Read)

data Generic_name = Generic_name Name
  deriving (Eq, Ord, Show, Read)

data Port_name = Port_name Name
  deriving (Eq, Ord, Show, Read)

data Parameter_name = Parameter_name Name
  deriving (Eq, Ord, Show, Read)

data Formal_parameter_list
    = Formal_parameter_list Parameter_interface_list
  deriving (Eq, Ord, Show, Read)

data Parameter_interface_list
    = Parameter_interface_list Interface_list
  deriving (Eq, Ord, Show, Read)

data Formal_part
    = Formal_partFormal_designator Formal_designator
    | Formal_part1 Function_name Formal_designator
    | Formal_part2 Type_mark Formal_designator
  deriving (Eq, Ord, Show, Read)

data Function_name = Function_name Name
  deriving (Eq, Ord, Show, Read)

data Full_type_declaration
    = Full_type_declaration Identifier Type_definition
  deriving (Eq, Ord, Show, Read)

data Function_call
    = Function_call Function_name [Actual_parameter_partPar]
  deriving (Eq, Ord, Show, Read)

data Actual_parameter_partPar
    = Actual_parameter_partPar Actual_parameter_part
  deriving (Eq, Ord, Show, Read)

data BEGINBlock_declarative_item
    = BEGINBlock_declarative_item [Block_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Generate_statement
    = Generate_statement Generate_label Generation_scheme [BEGINBlock_declarative_item] [Concurrent_statement] [Generate_label]
  deriving (Eq, Ord, Show, Read)

data Generate_label = Generate_label Label
  deriving (Eq, Ord, Show, Read)

data Generation_scheme
    = Generation_scheme1 Generate_parameter_specification
    | Generation_scheme2 Condition
  deriving (Eq, Ord, Show, Read)

data Generate_parameter_specification
    = Generate_parameter_specification Parameter_specification
  deriving (Eq, Ord, Show, Read)

data Generic_clause = Generic_clause Generic_list
  deriving (Eq, Ord, Show, Read)

data Generic_list = Generic_list Generic_interface_list
  deriving (Eq, Ord, Show, Read)

data Generic_interface_list = Generic_interface_list Interface_list
  deriving (Eq, Ord, Show, Read)

data Generic_map_aspect
    = Generic_map_aspect Generic_association_list
  deriving (Eq, Ord, Show, Read)

data Generic_association_list
    = Generic_association_list Association_list
  deriving (Eq, Ord, Show, Read)

data Generic_map_aspectSemi
    = Generic_map_aspectSemi Generic_map_aspect
  deriving (Eq, Ord, Show, Read)

data Graphic_character
    = Graphic_characterBasic_graphic_character Basic_graphic_character
    | Graphic_characterLower_case_letter Lower_case_letter
    | Graphic_characterOther_special_character Other_special_character
  deriving (Eq, Ord, Show, Read)

data Other_special_character = Other_special_character
  deriving (Eq, Ord, Show, Read)

data Group_constituent
    = Group_constituentName Name
    | Group_constituentCharacter_literal Character_literal
  deriving (Eq, Ord, Show, Read)

data Group_constituent_list
    = Group_constituent_list [Group_constituent]
  deriving (Eq, Ord, Show, Read)

data Group_template_declaration
    = Group_template_declaration Identifier Entity_class_entry_list
  deriving (Eq, Ord, Show, Read)

data Group_declaration
    = Group_declaration Identifier Group_template_name Group_constituent_list
  deriving (Eq, Ord, Show, Read)

data Group_template_name = Group_template_name Name
  deriving (Eq, Ord, Show, Read)

data Guarded_signal_specification
    = Guarded_signal_specification Guarded_signal_list Type_mark
  deriving (Eq, Ord, Show, Read)

data Guarded_signal_list = Guarded_signal_list Signal_list
  deriving (Eq, Ord, Show, Read)

data Identifier
    = IdentifierBasic_identifier Basic_identifier
    | IdentifierExtended_identifier Extended_identifier
  deriving (Eq, Ord, Show, Read)

data Identifier_list = Identifier_list [Identifier]
  deriving (Eq, Ord, Show, Read)

data If_statement
    = If_statement [If_labelColon] Condition Sequence_of_statements [ELSEStatement] [ELSEIFStatement] [If_label]
  deriving (Eq, Ord, Show, Read)

data If_labelColon = If_labelColon If_label
  deriving (Eq, Ord, Show, Read)

data ELSEIFStatement
    = ELSEIFStatement Condition Sequence_of_statements
  deriving (Eq, Ord, Show, Read)

data ELSEStatement = ELSEStatement Sequence_of_statements
  deriving (Eq, Ord, Show, Read)

data If_label = If_label Label
  deriving (Eq, Ord, Show, Read)

data Incomplete_type_declaration
    = Incomplete_type_declaration Identifier
  deriving (Eq, Ord, Show, Read)

data Index_constraint = Index_constraint [Discrete_range]
  deriving (Eq, Ord, Show, Read)

data Index_specification
    = Index_specificationDiscrete_range Discrete_range
    | Index_specificationStatic_expression Static_expression
  deriving (Eq, Ord, Show, Read)

data Static_expression = Static_expression Expression
  deriving (Eq, Ord, Show, Read)

data Index_subtype_definition
    = Index_subtype_definition Type_mark Range
  deriving (Eq, Ord, Show, Read)

data Indexed_name = Indexed_name Prefix [Expression]
  deriving (Eq, Ord, Show, Read)

data Instantiated_unit
    = Instantiated_unit1 [COMPONENTText] Component_name
    | Instantiated_unit2 Entity_name [Architecture_identifierPar]
    | Instantiated_unit3 Configuration_name
  deriving (Eq, Ord, Show, Read)

data COMPONENTText = COMPONENTText
  deriving (Eq, Ord, Show, Read)

data Architecture_identifierPar
    = Architecture_identifierPar Architecture_identifier
  deriving (Eq, Ord, Show, Read)

data Entity_name = Entity_name Name
  deriving (Eq, Ord, Show, Read)

data Architecture_identifier = Architecture_identifier Identifier
  deriving (Eq, Ord, Show, Read)

data Instantiation_list
    = Instantiation_list1 [Instantiation_label]
    | Instantiation_list_OTHERS
    | Instantiation_list_ALL
  deriving (Eq, Ord, Show, Read)

data VInteger = VInteger NumString
  deriving (Eq, Ord, Show, Read)

data IntAccuum
    = IntAccuum1 Digit IntAccuum
    | IntAccuum2 Digit Underline IntAccuum
    | IntAccuumDigit Digit
  deriving (Eq, Ord, Show, Read)

data Underline = Underline
  deriving (Eq, Ord, Show, Read)

data Integer_type_definition
    = Integer_type_definition Range_constraint
  deriving (Eq, Ord, Show, Read)

data Interface_constant_declaration
    = Interface_constant_declaration [ConstantText] Identifier_list [InText] Subtype_indication [Static_expressionAssign]
  deriving (Eq, Ord, Show, Read)

data Interface_declaration
    = Interface_declarationInterface_constant_declaration Interface_constant_declaration
    | Interface_declarationInterface_signal_declaration Interface_signal_declaration
    | Interface_declarationInterface_variable_declaration Interface_variable_declaration
    | Interface_declarationInterface_file_declaration Interface_file_declaration
  deriving (Eq, Ord, Show, Read)

data Interface_element = Interface_element Interface_declaration
  deriving (Eq, Ord, Show, Read)

data Interface_file_declaration
    = Interface_file_declaration Identifier_list Subtype_indication
  deriving (Eq, Ord, Show, Read)

data Interface_list = Interface_list [Interface_element]
  deriving (Eq, Ord, Show, Read)

data Interface_signal_declaration
    = Interface_signal_declaration [SIGNALText] Identifier_list [Mode] Subtype_indication [BUSText] [Static_expressionAssign]
  deriving (Eq, Ord, Show, Read)

data Interface_variable_declaration
    = Interface_variable_declaration [VARIABLEText] Identifier_list [Mode] Subtype_indication [Static_expressionAssign]
  deriving (Eq, Ord, Show, Read)

data Iteration_scheme
    = Iteration_scheme1 Condition
    | Iteration_scheme2 Loop_parameter_specification
  deriving (Eq, Ord, Show, Read)

data Loop_parameter_specification
    = Loop_parameter_specification Parameter_specification
  deriving (Eq, Ord, Show, Read)

data Label = Label Identifier
  deriving (Eq, Ord, Show, Read)

data Letter
    = LetterUpper_case_letter Upper_case_letter
    | LetterLower_case_letter Lower_case_letter
  deriving (Eq, Ord, Show, Read)

data Upper_case_letter
    = Upper_case_letter_A
    | Upper_case_letter_B
    | Upper_case_letter_C
    | Upper_case_letter_D
    | Upper_case_letter_E
    | Upper_case_letter_F
    | Upper_case_letter_G
    | Upper_case_letter_H
    | Upper_case_letter_I
    | Upper_case_letter_J
    | Upper_case_letter_K
    | Upper_case_letter_L
    | Upper_case_letter_M
    | Upper_case_letter_N
    | Upper_case_letter_O
    | Upper_case_letter_P
    | Upper_case_letter_Q
    | Upper_case_letter_R
    | Upper_case_letter_S
    | Upper_case_letter_T
    | Upper_case_letter_U
    | Upper_case_letter_V
    | Upper_case_letter_W
    | Upper_case_letter_X
    | Upper_case_letter_Y
    | Upper_case_letter_Z
  deriving (Eq, Ord, Show, Read)

data Lower_case_letter
    = Lower_case_letter_a
    | Lower_case_letter_b
    | Lower_case_letter_c
    | Lower_case_letter_d
    | Lower_case_letter_e
    | Lower_case_letter_f
    | Lower_case_letter_g
    | Lower_case_letter_h
    | Lower_case_letter_i
    | Lower_case_letter_j
    | Lower_case_letter_k
    | Lower_case_letter_l
    | Lower_case_letter_m
    | Lower_case_letter_n
    | Lower_case_letter_o
    | Lower_case_letter_p
    | Lower_case_letter_q
    | Lower_case_letter_r
    | Lower_case_letter_s
    | Lower_case_letter_t
    | Lower_case_letter_u
    | Lower_case_letter_v
    | Lower_case_letter_w
    | Lower_case_letter_x
    | Lower_case_letter_y
    | Lower_case_letter_z
  deriving (Eq, Ord, Show, Read)

data Letter_or_digit
    = Letter_or_digitLetter Letter | Letter_or_digitDigit Digit
  deriving (Eq, Ord, Show, Read)

data Library_clause = Library_clause Logical_name_list
  deriving (Eq, Ord, Show, Read)

data Library_unit
    = Library_unitPrimary_unit Primary_unit
    | Library_unitSecondary_unit Secondary_unit
  deriving (Eq, Ord, Show, Read)

data Literal
    = LiteralNumeric_literal Numeric_literal
    | LiteralEnumeration_literal Enumeration_literal
    | LiteralString_literal String_literal
    | LiteralBit_string_literal Bit_string_literal
    | Literal_NULL
  deriving (Eq, Ord, Show, Read)

data Logical_name = Logical_name Identifier
  deriving (Eq, Ord, Show, Read)

data Logical_name_list = Logical_name_list [Logical_name]
  deriving (Eq, Ord, Show, Read)

data Logical_operator
    = Logical_operator_AND
    | Logical_operator_OR
    | Logical_operator_NAND
    | Logical_operator_NOR
    | Logical_operator_XOR
    | Logical_operator_XNOR
  deriving (Eq, Ord, Show, Read)

data Loop_statement
    = Loop_statement [LoopLabelColon] [Iteration_scheme] Sequence_of_statements [Loop_label]
  deriving (Eq, Ord, Show, Read)

data Miscellaneous_operator
    = Miscellaneous_operator1
    | Miscellaneous_operator_ABS
    | Miscellaneous_operator_NOT
  deriving (Eq, Ord, Show, Read)

data Mode
    = Mode_IN | Mode_OUT | Mode_INOUT | Mode_BUFFER | Mode_LINKAGE
  deriving (Eq, Ord, Show, Read)

data Multiplying_operator
    = Multiplying_operator1
    | Multiplying_operator2
    | Multiplying_operator_MOD
    | Multiplying_operator_REM
  deriving (Eq, Ord, Show, Read)

data Name
    = NameSimple_name Simple_name
    | NameOperator_symbol Operator_symbol
    | NameSelected_name Selected_name
    | NameIndexed_name Indexed_name
    | NameSlice_name Slice_name
    | NameAttribute_name Attribute_name
  deriving (Eq, Ord, Show, Read)

data Next_statement
    = Next_statement [Label] [Loop_label] [WhenCondition]
  deriving (Eq, Ord, Show, Read)

data Null_statement = Null_statement [Label]
  deriving (Eq, Ord, Show, Read)

data Numeric_literal
    = Numeric_literalAbstract_literal Abstract_literal
    | Numeric_literalPhysical_literal Physical_literal
  deriving (Eq, Ord, Show, Read)

data Object_declaration
    = Object_declarationConstant_declaration Constant_declaration
    | Object_declarationSignal_declaration Signal_declaration
    | Object_declarationVariable_declaration Variable_declaration
    | Object_declarationFile_declaration File_declaration
  deriving (Eq, Ord, Show, Read)

data Operator_symbol = Operator_symbol String_literal
  deriving (Eq, Ord, Show, Read)

data Options = Options [GUARDEDtext] [Delay_mechanism]
  deriving (Eq, Ord, Show, Read)

data Package_body
    = Package_body Package_simple_name Package_body_declarative_part [PackageBodytext] [PackageBodytext]
  deriving (Eq, Ord, Show, Read)

data Package_simple_name = Package_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Package_body_declarative_item
    = Package_body_declarative_itemSubprogram_declaration Subprogram_declaration
    | Package_body_declarative_itemSubprogram_body Subprogram_body
    | Package_body_declarative_itemType_declaration Type_declaration
    | Package_body_declarative_itemSubtype_declaration Subtype_declaration
    | Package_body_declarative_itemConstant_declaration Constant_declaration
    | Package_body_declarative_itemShared_variable_declaration Shared_variable_declaration
    | Package_body_declarative_itemFile_declaration File_declaration
    | Package_body_declarative_itemAlias_declaration Alias_declaration
    | Package_body_declarative_itemUse_clause Use_clause
    | Package_body_declarative_itemGroup_template_declaration Group_template_declaration
    | Package_body_declarative_itemGroup_declaration Group_declaration
  deriving (Eq, Ord, Show, Read)

data Package_body_declarative_part
    = Package_body_declarative_part [Package_body_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Package_declaration
    = Package_declaration Identifier Package_declarative_part [Packagetext] [Package_simple_name]
  deriving (Eq, Ord, Show, Read)

data Packagetext = Packagetext
  deriving (Eq, Ord, Show, Read)

data Package_declarative_item
    = Package_declarative_itemSubprogram_declaration Subprogram_declaration
    | Package_declarative_itemType_declaration Type_declaration
    | Package_declarative_itemSubtype_declaration Subtype_declaration
    | Package_declarative_itemConstant_declaration Constant_declaration
    | Package_declarative_itemSignal_declaration Signal_declaration
    | Package_declarative_itemShared_variable_declaration Shared_variable_declaration
    | Package_declarative_itemFile_declaration File_declaration
    | Package_declarative_itemAlias_declaration Alias_declaration
    | Package_declarative_itemComponent_declaration Component_declaration
    | Package_declarative_itemAttribute_declaration Attribute_declaration
    | Package_declarative_itemAttribute_specification Attribute_specification
    | Package_declarative_itemDisconnection_specification Disconnection_specification
    | Package_declarative_itemUse_clause Use_clause
    | Package_declarative_itemGroup_template_declaration Group_template_declaration
    | Package_declarative_itemGroup_declaration Group_declaration
  deriving (Eq, Ord, Show, Read)

data Package_declarative_part
    = Package_declarative_part [Package_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Parameter_specification
    = Parameter_specification Identifier Discrete_range
  deriving (Eq, Ord, Show, Read)

data Physical_literal
    = Physical_literal [Abstract_literal] Unit_name
  deriving (Eq, Ord, Show, Read)

data Unit_name = Unit_name Name
  deriving (Eq, Ord, Show, Read)

data Physical_type_definition
    = Physical_type_definition Range_constraint Base_unit_declaration [Secondary_unit_declaration] [Physical_type_simple_name]
  deriving (Eq, Ord, Show, Read)

data Physical_type_simple_name
    = Physical_type_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Port_clause = Port_clause Port_list
  deriving (Eq, Ord, Show, Read)

data Port_list = Port_list Port_interface_list
  deriving (Eq, Ord, Show, Read)

data Port_interface_list = Port_interface_list Interface_list
  deriving (Eq, Ord, Show, Read)

data Port_map_aspect = Port_map_aspect Port_association_list
  deriving (Eq, Ord, Show, Read)

data Port_association_list = Port_association_list Association_list
  deriving (Eq, Ord, Show, Read)

data Procedure_name = Procedure_name Name
  deriving (Eq, Ord, Show, Read)

data Prefix = PrefixName Name | PrefixFunction_call Function_call
  deriving (Eq, Ord, Show, Read)

data Primary
    = PrimaryName Name
    | PrimaryLiteral Literal
    | PrimaryAggregate Aggregate
    | PrimaryFunction_call Function_call
    | PrimaryQualified_expression Qualified_expression
    | PrimaryType_conversion Type_conversion
    | PrimaryAllocator Allocator
    | Primary1 Expression
  deriving (Eq, Ord, Show, Read)

data Primary_unit
    = Primary_unitEntity_declaration Entity_declaration
    | Primary_unitConfiguration_declaration Configuration_declaration
    | Primary_unitPackage_declaration Package_declaration
  deriving (Eq, Ord, Show, Read)

data Procedure_call
    = Procedure_call1 Procedure_name [Actual_parameter_partPar]
  deriving (Eq, Ord, Show, Read)

data Procedure_call_statement
    = Procedure_call_statement [Label] Procedure_call
  deriving (Eq, Ord, Show, Read)

data Process_declarative_item
    = Process_declarative_itemSubprogram_declaration Subprogram_declaration
    | Process_declarative_itemSubprogram_body Subprogram_body
    | Process_declarative_itemType_declaration Type_declaration
    | Process_declarative_itemSubtype_declaration Subtype_declaration
    | Process_declarative_itemConstant_declaration Constant_declaration
    | Process_declarative_itemVariable_declaration Variable_declaration
    | Process_declarative_itemFile_declaration File_declaration
    | Process_declarative_itemAlias_declaration Alias_declaration
    | Process_declarative_itemAttribute_declaration Attribute_declaration
    | Process_declarative_itemAttribute_specification Attribute_specification
    | Process_declarative_itemUse_clause Use_clause
    | Process_declarative_itemGroup_template_declaration Group_template_declaration
    | Process_declarative_itemGroup_declaration Group_declaration
  deriving (Eq, Ord, Show, Read)

data Process_declarative_part
    = Process_declarative_part [Process_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Process_statement
    = Process_statement [Process_labelColon] [MaybePOSTPONED] [Sensitivity_listPar] [IS] Process_declarative_part Process_statement_part [MaybePOSTPONED] [Process_label]
  deriving (Eq, Ord, Show, Read)

data Process_labelColon = Process_labelColon
  deriving (Eq, Ord, Show, Read)

data Sensitivity_listPar = Sensitivity_listPar Sensitivity_list
  deriving (Eq, Ord, Show, Read)

data Process_label = Process_label Label
  deriving (Eq, Ord, Show, Read)

data Process_statement_part
    = Process_statement_part [Sensitivity_list]
  deriving (Eq, Ord, Show, Read)

data Range
    = RangeRange_attribute_name Range_attribute_name
    | Range1 Simple_expression Direction Simple_expression
  deriving (Eq, Ord, Show, Read)

data Range_attribute_name = Range_attribute_name Attribute_name
  deriving (Eq, Ord, Show, Read)

data Range_constraint = Range_constraint Range Range
  deriving (Eq, Ord, Show, Read)

data Record_type_definition
    = Record_type_definition [Element_declaration] [Record_type_simple_name]
  deriving (Eq, Ord, Show, Read)

data Record_type_simple_name = Record_type_simple_name Simple_name
  deriving (Eq, Ord, Show, Read)

data Relation = Relation Shift_expression [ReShift]
  deriving (Eq, Ord, Show, Read)

data ReShift = ReShift Relational_operator Shift_expression
  deriving (Eq, Ord, Show, Read)

data Relational_operator
    = Relational_operator1
    | Relational_operator2
    | Relational_operator3
    | Relational_operator4
    | Relational_operator5
    | Relational_operator6
  deriving (Eq, Ord, Show, Read)

data Report_statement
    = Report_statement [Label] Expression [SevExp]
  deriving (Eq, Ord, Show, Read)

data SevExp = SevExp Expression
  deriving (Eq, Ord, Show, Read)

data Return_statement = Return_statement [Label] [Expression]
  deriving (Eq, Ord, Show, Read)

data Scalar_type_definition
    = Scalar_type_definitionEnumeration_type_definition Enumeration_type_definition
    | Scalar_type_definitionInteger_type_definition Integer_type_definition
    | Scalar_type_definitionFloating_type_definition Floating_type_definition
    | Scalar_type_definitionPhysical_type_definition Physical_type_definition
  deriving (Eq, Ord, Show, Read)

data Secondary_unit
    = Secondary_unitArchitecture_body Architecture_body
    | Secondary_unitPackage_body Package_body
  deriving (Eq, Ord, Show, Read)

data Secondary_unit_declaration
    = Secondary_unit_declaration Identifier Physical_literal
  deriving (Eq, Ord, Show, Read)

data Selected_name = Selected_name Prefix Suffix
  deriving (Eq, Ord, Show, Read)

data Selected_signal_assignment
    = Selected_signal_assignment Expression Target Options Selected_waveforms
  deriving (Eq, Ord, Show, Read)

data Selected_waveforms = Selected_waveforms [WaveChoice]
  deriving (Eq, Ord, Show, Read)

data WaveChoice = WaveChoice Waveform Choices
  deriving (Eq, Ord, Show, Read)

data Sensitivity_clause = Sensitivity_clause Sensitivity_list
  deriving (Eq, Ord, Show, Read)

data Sensitivity_list = Sensitivity_list [Signal_name]
  deriving (Eq, Ord, Show, Read)

data Signal_name = Signal_name Name
  deriving (Eq, Ord, Show, Read)

data Sequence_of_statements
    = Sequence_of_statements [Sequence_of_statements]
  deriving (Eq, Ord, Show, Read)

data Sequential_statement
    = Sequential_statementWait_statement Wait_statement
    | Sequential_statementAssertion_statement Assertion_statement
    | Sequential_statementReport_statement Report_statement
    | Sequential_statementSignal_assignment_statement Signal_assignment_statement
    | Sequential_statementVariable_assignment_statement Variable_assignment_statement
    | Sequential_statementProcedure_call_statement Procedure_call_statement
    | Sequential_statementIf_statement If_statement
    | Sequential_statementCase_statement Case_statement
    | Sequential_statementLoop_statement Loop_statement
    | Sequential_statementNext_statement Next_statement
    | Sequential_statementExit_statement Exit_statement
    | Sequential_statementReturn_statement Return_statement
    | Sequential_statementNull_statement Null_statement
  deriving (Eq, Ord, Show, Read)

data Shift_expression
    = Shift_expression Simple_expression [Shift_operatorSimple_expressionText]
  deriving (Eq, Ord, Show, Read)

data Shift_operatorSimple_expressionText
    = Shift_operatorSimple_expressionText Shift_operator Simple_expression
  deriving (Eq, Ord, Show, Read)

data Shift_operator
    = Shift_operator_SLL
    | Shift_operator_SRL
    | Shift_operator_SLA
    | Shift_operator_SRA
    | Shift_operator_ROL
    | Shift_operator_ROR
  deriving (Eq, Ord, Show, Read)

data Sign = Sign1 | Sign2
  deriving (Eq, Ord, Show, Read)

data Signal_assignment_statement
    = Signal_assignment_statement [Label] Target [Delay_mechanism] Waveform
  deriving (Eq, Ord, Show, Read)

data Signal_declaration
    = Signal_declaration Signal Identifier_list Subtype_indication [Signal_kind] [VarAssign]
  deriving (Eq, Ord, Show, Read)

data Signal = Signal
  deriving (Eq, Ord, Show, Read)

data Signal_kind = Signal_kind_REGISTER | Signal_kind_BUS
  deriving (Eq, Ord, Show, Read)

data Signal_list
    = Signal_list1 [Signal_name] | Signal_list_OTHERS | Signal_list_ALL
  deriving (Eq, Ord, Show, Read)

data Signature = Signature [TypeRe]
  deriving (Eq, Ord, Show, Read)

data ReturnType = ReturnType Type_mark
  deriving (Eq, Ord, Show, Read)

data TypeRe = TypeRe [Type_mark] [ReturnType]
  deriving (Eq, Ord, Show, Read)

data Simple_expression = Simple_expression [Sign] Term [AddOpTem]
  deriving (Eq, Ord, Show, Read)

data AddOpTem = AddOpTem Adding_operator Term
  deriving (Eq, Ord, Show, Read)

data Simple_name = Simple_name Ident
  deriving (Eq, Ord, Show, Read)

data Slice_name = Slice_name Prefix Discrete_range
  deriving (Eq, Ord, Show, Read)

data String_literal = String_literal [Graphic_character]
  deriving (Eq, Ord, Show, Read)

data Subprogram_body
    = Subprogram_body Subprogram_specification Subprogram_declarative_part Subprogram_statement_part [Subprogram_kind] [Designator]
  deriving (Eq, Ord, Show, Read)

data Subprogram_declaration
    = Subprogram_declaration Subprogram_specification
  deriving (Eq, Ord, Show, Read)

data Subprogram_declarative_item
    = Subprogram_declarative_itemSubprogram_declaration Subprogram_declaration
    | Subprogram_declarative_itemSubprogram_body Subprogram_body
    | Subprogram_declarative_itemType_declaration Type_declaration
    | Subprogram_declarative_itemSubtype_declaration Subtype_declaration
    | Subprogram_declarative_itemConstant_declaration Constant_declaration
    | Subprogram_declarative_itemVariable_declaration Variable_declaration
    | Subprogram_declarative_itemFile_declaration File_declaration
    | Subprogram_declarative_itemAlias_declaration Alias_declaration
    | Subprogram_declarative_itemAttribute_declaration Attribute_declaration
    | Subprogram_declarative_itemAttribute_specification Attribute_specification
    | Subprogram_declarative_itemUse_clause Use_clause
    | Subprogram_declarative_itemGroup_template_declaration Group_template_declaration
    | Subprogram_declarative_itemGroup_declaration Group_declaration
  deriving (Eq, Ord, Show, Read)

data Subprogram_declarative_part
    = Subprogram_declarative_part [Subprogram_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Subprogram_kind
    = Subprogram_kind_PROCEDURE | Subprogram_kind_FUNCTION
  deriving (Eq, Ord, Show, Read)

data Subprogram_specification
    = Subprogram_specification1 Designator [Formal_parameter_listPar]
    | Subprogram_specification2 [PureImpure] Designator [Formal_parameter_listPar] Type_mark
  deriving (Eq, Ord, Show, Read)

data Formal_parameter_listPar
    = Formal_parameter_listPar Formal_parameter_list
  deriving (Eq, Ord, Show, Read)

data PureImpure = PureImpure_PURE | PureImpure_IMPURE
  deriving (Eq, Ord, Show, Read)

data Subprogram_statement_part
    = Subprogram_statement_part [Sequential_statement]
  deriving (Eq, Ord, Show, Read)

data Subtype_declaration
    = Subtype_declaration Identifier Subtype_indication
  deriving (Eq, Ord, Show, Read)

data Subtype_indication
    = Subtype_indication [Resolution_function_name] Type_mark [Constraint]
  deriving (Eq, Ord, Show, Read)

data Resolution_function_name = Resolution_function_name Ident
  deriving (Eq, Ord, Show, Read)

data Suffix
    = SuffixSimple_name Simple_name
    | SuffixCharacter_literal Character_literal
    | SuffixOperator_symbol Operator_symbol
    | Suffix_ALL
  deriving (Eq, Ord, Show, Read)

data Target = TargetName Name | TargetAggregate Aggregate
  deriving (Eq, Ord, Show, Read)

data Term = Term Factor [FacMulFac]
  deriving (Eq, Ord, Show, Read)

data FacMulFac = FacMulFac Multiplying_operator Factor
  deriving (Eq, Ord, Show, Read)

data Timeout_clause = Timeout_clause Time_expression
  deriving (Eq, Ord, Show, Read)

data Time_expression = Time_expression Expression
  deriving (Eq, Ord, Show, Read)

data Type_conversion = Type_conversion Type_mark Expression
  deriving (Eq, Ord, Show, Read)

data Type_declaration
    = Type_declarationFull_type_declaration Full_type_declaration
    | Type_declarationIncomplete_type_declaration Incomplete_type_declaration
  deriving (Eq, Ord, Show, Read)

data Type_definition
    = Type_definitionScalar_type_definition Scalar_type_definition
    | Type_definitionComposite_type_definition Composite_type_definition
    | Type_definitionAccess_type_definition Access_type_definition
    | Type_definitionFile_type_definition File_type_definition
  deriving (Eq, Ord, Show, Read)

data Type_mark
    = Type_markType_name Type_name | Type_markSubtype_name Subtype_name
  deriving (Eq, Ord, Show, Read)

data Type_name = Type_name Ident
  deriving (Eq, Ord, Show, Read)

data Unconstrained_array_definition
    = Unconstrained_array_definition [Index_subtype_definition] Element_subtype_indication
  deriving (Eq, Ord, Show, Read)

data Element_subtype_indication
    = Element_subtype_indication Subtype_indication
  deriving (Eq, Ord, Show, Read)

data Subtype_name = Subtype_name Ident
  deriving (Eq, Ord, Show, Read)

data Use_clause = Use_clause [Selected_name]
  deriving (Eq, Ord, Show, Read)

data Variable_assignment_statement
    = Variable_assignment_statement [Label] Target Expression
  deriving (Eq, Ord, Show, Read)

data Variable_declaration
    = Variable_declaration [SharedText] Identifier_list Subtype_indication [VarAssign]
  deriving (Eq, Ord, Show, Read)

data SharedText = ShareText
  deriving (Eq, Ord, Show, Read)

data Value_expression = Value_expression Expression
  deriving (Eq, Ord, Show, Read)

data Wait_statement
    = Wait_statement [Label] [Sensitivity_clause] [Condition_clause] [Timeout_clause]
  deriving (Eq, Ord, Show, Read)

data Waveform = Waveform1 [Waveform_element] | Waveform_UNAFFECTED
  deriving (Eq, Ord, Show, Read)

data Waveform_element
    = Waveform_element1 Value_expression [AfterTime]
    | Waveform_element2 [AfterTime]
  deriving (Eq, Ord, Show, Read)

data AfterTime = AfterTime Time_expression
  deriving (Eq, Ord, Show, Read)

data Architecture_declarative_part
    = Architecture_declarative_part [Block_declarative_item]
  deriving (Eq, Ord, Show, Read)

data Architecture_statement_part
    = Architecture_statement_part [Concurrent_statement]
  deriving (Eq, Ord, Show, Read)

data MaybeREPORT = MaybeREPORT1 Expression | MaybeREPORT2
  deriving (Eq, Ord, Show, Read)

data MaybeSEVERITY = MaybeSEVERITY1 Expression | MaybeSEVERITY2
  deriving (Eq, Ord, Show, Read)

data Base_specifier
    = Base_specifier_B | Base_specifier_O | Base_specifier_X
  deriving (Eq, Ord, Show, Read)

data Basic_character
    = Basic_characterBasic_graphic_character Basic_graphic_character
    | Basic_characterFormat_effector Format_effector
  deriving (Eq, Ord, Show, Read)

data Format_effector = Format_effector
  deriving (Eq, Ord, Show, Read)

data Basic_graphic_character
    = Basic_graphic_characterUpper_case_letter Upper_case_letter
    | Basic_graphic_characterDigit Digit
    | Basic_graphic_characterSpecial_character Special_character
    | Basic_graphic_characterSpace_character Space_character
  deriving (Eq, Ord, Show, Read)

data Local_generic_clause = Local_generic_clause Generic_clause
  deriving (Eq, Ord, Show, Read)

data Special_character = Special_character
  deriving (Eq, Ord, Show, Read)

data Space_character = Space_character
  deriving (Eq, Ord, Show, Read)

